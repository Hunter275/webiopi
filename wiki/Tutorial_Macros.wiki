=<font color="red">(DRAFT)</font> Tutorial : Using macros=
If we want to change the on/off hours from the UI, we can use webiopi macros. Macros are custom Pythons functions automatically binded to the REST API, so they are remotely callable. They allow to remotely trigger complex computation on the Raspberry Pi or manual events, trigger multiple GPIO at the same time, change settings...

==Adding macro in the Python script==
Registering macros to the WebIOPi server only requires a single Python decorator before each function.
{{{
import webiopi
...
HOUR_ON = 8
HOUR_OFF = 18
...
def setup():
...
def loop():
...
def destroy():
...

@webiopi.macro
def getLightHours():
    return "%d;%d" % (HOUR_ON, HOUR_OFF)

@webiopi.macro
def setLightHours(on, off):
    HOUR_ON = int(on)
    HOUR_OFF = int(off)
    return getLightHours()

}}}

Both get/setLightHours functions are declared to WebIOPi using the *@webiopi.macro* decorator. The first one return a string containing both ON and OFF hours separated by a semicolon. The second function casts arguments received and set ON and OFF hours as well as returning the effective hours to give a feedback to the remote UI.

==Calling macros from Javascript==
Using macros from Javascript is really easy. The most difficult part is to interact with the UI to retrieve data typed by the user and display the result.

{{{
<html>
...
<body>
Turn On at :<input type="text" id="inputOn" /><br/>
Turn Off at: <input type="text" id="inputOff" /><br/>
<div id="controls"></div>
</body>
</html>
}}}