=<font color="red">(DRAFT)</font> Tutorial : Using devices=
WebIOPi include several drivers to directly control over 30 electronic devices. It provide a consistent and common abstraction for most used sensors, analog converts, and GPIO expanders. See the [DEVICES supported devices] pages for a complete listing.

All supported devices can be used in your Python script, from the REST API, the Javascript library, or even from the [PYTHONCLIENT Python] Python or [JAVACLIENT Java] Client. Function provided depend on the devices type. Devices can support one or multiples interfaces. Interfaces are grouped in 3 packages :

  * [DIGITAL Digital]
    * GPIOPort
  * [ANALOG Analog]
    * ADC (Analog to Digital Converter, ie. analog inputs)
    * DAC (Digital to Analog Converter, ie. analog outputs)
    * PWM (Pulse Width Modulation outputs)
  * [SENSOR Sensor]
    * Temperature
    * Pressure
    * Luminosity
    * Distance

==Testing Devices==
Before using devices in your Pythons script or custom UI, you may need to debug your circuitry and at least, verify it works well with the WebIOPi environment. You don't need to write any line of code to test your devices, thanks to the WebIOPi configuration file.

Assume we have a [BMP085] I2C Temperature and Pressure sensor, simply add following line in the *`[DEVICES]`* section to register it with the name *bmp*. This name will be used to identify the sensor in the whole system.
{{{
[DEVICES]
bmp = BMP085
}}}

Assume we also have a [MCP230xx MCP23008] I2C GPIO Expander, then we can also add the optional I2C slave address.
{{{
[DEVICES]
bmp = BMP085
gpio0 = MCP23008 slave:0x20
}}}

Ensure you don't have any *doc-root* directive in the *`[HTTP]`* section to use defaults web apps, save, and restart webiopi to use the device monitor (http://raspberrypi:8000/app/devices-monitor/).

Following example shows several devices displayed in the monitor.
<p align="center">http://trouch.com/wp-content/uploads/2013/03/webiopi-0.6-devices1.png</p>

==Devices Javascript Library==

==Devices in Python scripts==

==Advanced Python script==